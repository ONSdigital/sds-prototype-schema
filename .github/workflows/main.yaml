name: Scan and Call Python Script

on:
  push:
    branches:
      - main
    

jobs:
  scan-and-call-script:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch the full history

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Set up GCP credentials
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

    - name: Scan and call Python script
      run: |
        # If the last commit doesn't exist assume all files in /schemas directory are changed
        if [ -z "${{ github.event.before }}" ]; then
          CHANGED_FILES=$(ls schemas/)
        else
          FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- schemas/)

          for FILE in $FILES; do
              # Remove all whitespace and save the contents of the file in the previous commit
              PREVIOUS_CONTENT=$(git show ${{ github.event.before }}:$FILE | tr -d "[:space:]")
          
              # Remove all whitespace and save the contents of the file in the current commit
              CURRENT_CONTENT=$(git show ${{ github.sha }}:$FILE | tr -d "[:space:]")
          
              # Compare the contents of the file in the previous commit and the current commit
              if [ "$PREVIOUS_CONTENT" != "$CURRENT_CONTENT" ]; then
                  # If the contents are not the same, add the name of the file to the array
                  CHANGED_FILES+=($FILE)
              fi
          done
          fi

        # Process each changed file
        if [ ${#CHANGED_FILES[@]} -ne 0 ]; then
          for FILE in "${CHANGED_FILES[@]}"; do
            # Call Python script with the filename
            echo $FILE
            python publish.py "$FILE"
          done
        else
          echo "No changes in /schemas directory."
        fi
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        SANDBOX_LOAD_BALANCER_URL: ${{ secrets.SANDBOX_LOAD_BALANCER_URL }}
        PROJECT_ID: ${{ secrets.SDS_PROJECT_ID }}